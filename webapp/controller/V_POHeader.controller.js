sap.ui.define([
	"POReportForSCM/controller/BaseController",
	"sap/ui/model/json/JSONModel",
	"sap/ui/model/Filter",
	"sap/ui/model/FilterOperator",
	"sap/ui/model/FilterType",
	"sap/m/MessageBox",
	"sap/m/MessageToast"
], function(BaseController, JSONModel, Filter, FilterOperator, FilterType, MessageBox, MessageToast) {
	"use strict";

	return BaseController.extend("POReportForSCM.controller.V_POHeader", {

		onInit: function() {
			debugger;
			var dataModel = new JSONModel(),
				oModel = this.getOwnerComponent().getModel(),
				oTable = this.getView().byId("poHeaderTableId"),
				oFilters = [];
			// oModel.addBatchChangeOperations(batchChanges);
			oModel.setUseBatch(false);
			this.getView().setModel(dataModel, "dataModel");
			oModel.read("/POHeaderSet", {

				filters: oFilters,
				method: "GET",
				success: function(data) {
					dataModel.setData(data);
					oTable.setBusy(false);
				},
				error: function(oError) {
					oTable.setBusy(false);
					MessageToast.show("Failed to fetch purchase orders");
				}

			});
			debugger;
		},

		onFindPress: function(oEvent) {
			// debugger;
			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			oRouter.navTo("Route_FindItem", {});
		},

		navigateToRoute: function(routeName) {
			debugger;
			//This code was generated by the layout editor.
			var oModel = this.getOwnerComponent().getModel(),
				oTable = this.getView().byId("poHeaderTableId"),
				oItem = oTable.getSelectedItem(),
				oRouter = sap.ui.core.UIComponent.getRouterFor(this);

			if (!oItem) {
				MessageBox.error("Please select one of these purchase order");
				return;
			}
			var selectPO = oItem.mAggregations.cells[0].mProperties.text;
			if (routeName === "Route_ChangePO1") {
				oModel.callFunction("/GetReleaseStatus", {
					// filters: oFilters,
					urlParameters: {
						Ebeln: selectPO
					},
					method: "GET",
					success: function(data) {
						if (data.Status === "CREATED") {
							oRouter.navTo(routeName, {
								selectedPO: selectPO
							});
						} else {
							MessageBox.error("Purchase order No. " + selectPO + "has been released!");
						}
					},
					error: function(oError) {
						MessageToast.show("Can't get Status of purchase order");
					}

				});
			} else {

				oRouter.navTo(routeName, {
					selectedPO: selectPO
				});
			}

		},

		GoToDetails: function(oEvent) {
			debugger;
			//This code was generated by the layout editor.
			// var selectPO = oEvent.getSource().getBindingContext().getProperty("Ebeln");
			// var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			// oRouter.navTo("Route_PODetail", {
			// 	SelectedItem: selectPO
			// });
			this.navigateToRoute("Route_DisplayPO");
		},

		ChangePO: function(oEvent) {
			debugger;
			this.navigateToRoute("Route_ChangePO1");
		},

		CreatePO: function(oEvent) {

			var oRouter = sap.ui.core.UIComponent.getRouterFor(this);
			oRouter.navTo("Route_CreatePO1", {});
		},

		onFilterPressed: function(oEvent) {
			debugger;
			var oTable = this.getView().byId("poHeaderTableId"),
				docNo = this.byId("docNoId").getValue(),
				companyCode = this.byId("companyCodeId").getValue(),
				createdBy = this.byId("createdById").getValue(),
				docType = this.byId("docTypeId").getValue(),
				oFilters = [];

			if (docNo) {
				oFilters.push(new Filter("Ebeln", FilterOperator.Contains, docNo));
			}

			if (companyCode) {
				oFilters.push(new Filter("Bukrs", FilterOperator.Contains, companyCode));
			}

			if (createdBy) {
				oFilters.push(new Filter("Ernam", FilterOperator.Contains, createdBy));
			}

			if (docType) {
				oFilters.push(new Filter("Bsart", FilterOperator.Contains, docType));
			}

			var oModel = this.getOwnerComponent().getModel();
			var dataModel = this.getView().getModel("dataModel");

			oTable.setBusy(true);

			oModel.read("/POHeaderSet", {
				filters: oFilters,
				method: "GET",
				success: function(data) {
					dataModel.setData(data);
					oTable.setBusy(false);
				},
				error: function() {
					oTable.setBusy(false);
				}
			});
		},

		// onFilterPO: function(oEvent) {

		// 	// build filter array
		// 	var aFilter = [];
		// 	var sQuery = oEvent.getSource().getValue();
		// 	var aFilter = new Filter(
		// 		"Bsart",
		// 		FilterOperator.Contains,
		// 		sQuery
		// 	);

		// 	// if (sQuery) {
		// 	// 	aFilter.push(new Filter("Bsart", FilterOperator.Contains, sQuery));
		// 	// }
		// 	debugger;
		// 	// filter binding
		// 	var oBinding = this.getView().byId("POList").getBinding("items");
		// 	// var oBinding = oList;
		// 	oBinding.filter(aFilter, FilterType.Application);
		// }

	});

});